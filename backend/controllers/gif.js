import jwt from 'jsonwebtoken';
import fs from 'fs';
import db from '../database';
import cloudinary from '../config/cloudinaryConfig';
import Gif from '../models/gif';
import Comment from '../models/comment';


exports.createGif = (req, res) => {

  console.log('** ** ** ** ** ** ** ** ** Uploads ** ** ** ** ** ** ** ** ** **');

  const { file } = req;
  // File Upload
  cloudinary.uploader.upload(file, { tags: req.title }, (error, result) => {

    console.log();
    console.log('** File Upload');
    if (error) {
      console.warn(error);
    }
    console.log('* public_id for the uploaded image is generated by Cloudinary\'s service.');
    console.log('* ', result.public_id);
    console.log('* ', result.url);

    const gif = new Gif();
    gif.ownerId = req.body.userId;
    gif.title = result.original_filename;
    gif.authorName = '';
    gif.imageUrl = result.url;

    // Save Image To DB
    db('gifs')
      .returning('*')
      .insert(gif).then((data) => {
        console.log(data);
        res.status(201).json({
          status: 'success',
          data: {
            gifId: result.public_id,
            message: 'GIF image successfully posted',
            createdOn: result.created_at,
            title: result.original_filename,
            imageUrl: result.url,
          },
        });
      })
      .catch(
        (err) => {
          res.status(500).json({
            status: 'error',
            error: err.detail,
          });
        },
      );
  });

  // let filename = req.files.dataFile.path;
  // cloudinary.uploader.upload(filename, {
  //   tags: 'gotemps',
  //   resource_type: 'auto',
  // })
  //   .then(function (file) {
  //     console.log('Public id of the file is  ' + file.public_id);
  //     console.log('Url of the file is  ' + file.url);
  //     template.dataFile = file.url;
  //   })
  //   .catch(function (err) {
  //     if (err) {
  //       console.warn(err);
  //     }
  //   });
};


exports.deleteGif = (req, res) => {

  // Delete Article In DB
  db('gifs')
    .where({ id: req.params.id })
    .del()
    .then((data) => {
      if (data === 0) {
        return res.status(404).json({
          status: 'error',
          error: 'Gif Not Found!',
        });
      }

      res.status(200)
        .json({
          status: 'success',
          data: {
            message: 'Gif post successfully deleted',
          },
        });
    })
    .catch(
      (err) => {
        res.status(500)
          .json({
            status: 'error',
            error: err,
          });
      },
    );
};


exports.commentGif = (req, res) => {
  let gifTitle = '';

  // Get Gif from DB
  db
    .select('*')
    .from('gifs')
    .where({ id: req.params.id })
    .then((data) => {
      if (data.length === 0) {
        return res.status(404).json({
          status: 'error',
          error: 'Gif Not Found!',
        });
      }

      const { title } = data[0];
      gifTitle = title;
    })
    .catch(
      (err) => {
        res.status(500).json({
          status: 'error',
          error: err,
        });
      },
    );

  // Create Comment Object
  const comment = new Comment();
  comment.description = req.body.description;
  comment.authorid = req.body.userId;
  comment.postid = req.params.id;

  // Save Comment To DB
  db('comments')
    .returning('*')
    .insert(comment)
    .then((data) => {
      const { description, created_on } = data[0];
      res.status(201).json({
        status: 'success',
        data: {
          message: 'Comment successfully created',
          createdOn: created_on,
          gifTitle: gifTitle,
          comment: description,
        },
      });
    })
    .catch(
      (err) => {
        res.status(500).json({
          status: 'error',
          error: err,
        });
      },
    );
};
